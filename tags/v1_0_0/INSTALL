$Id: INSTALL,v 1.1 2004-08-20 13:53:42 oops Exp $

* mod_filebin 를 빌드하기 위한 조건

1. file 패키지가 설치 되어 있어야 합니다. 4.07버전에서 테스트가 되어졌습니다.
2. php4 또는 php5 가 설치 되어 있어야 합니다.


* mod_filebin 설치

php extension 은 3가지의 방법으로 빌드를 할 수 있습니다. 또한 빌드를 위해서는
file 패키지가 설치 되어 있어야 합니다.

1. phpize 를 이용하여 독립적으로  shared extension 으로 빌드

   1) 임의의 디렉토리에 mod_filebin 의 소스를 풀어 놓습니다.

      # cd /tmp
      # tar xvfpj mod_filebin-1.0.0.tar.bz2

   2) phpize 를 실행하여 빌드를 하기 위한 준비를 합니다.

      # cd mod_filebin-1.0.0
      # phpize

   3) ./configure 를 실행합니다.

      여기서 주의할 것은 file 패키지를 임의의 경로에 설치 했다면, libmagic.so
      와 magic.h 의 경로를 지정해 주시는 것이 좋습니다. libmagic.so 의 경로가
      /usr/local/lib/libmagic.so,  magic.h 가 /usr/local/include/file/magic.h
      라면 아래같이 실행을 하도록 합니다.

      설치 하는 서버가 리눅스라면, /usr/lib 와 /usr/include 에 각각 들어 있을
      경우에는 생략하실 수 있습니다.

      LDFLAGS 는 라이브러리 (libmagic.so 또는 libmagic.a ) 가 존재하는 경로를
      지정해 주며, CPPLFAGS 는 헤더 파일 (magic.h) 가 있는 경로를 지정 합니다.

      libmagic.a 또는 libmagic.so 는 아래의 경로에 있을 경우, 설치 스크립트가
      자동으로 찾기 때문에, 위의 LDFALGS 에 대한 언급을 무시하셔도 됩니다.

      /usr/lib
      /usr/local/lib
      /usr/local/file/lib 

      magic.h 는 아래의 경로에 있을 경우엔 설치 스크립트가 자동으로 찾기 때문
      에, 위의 CPPFLAGS 에 대한 언급을 무시하셔도 됩니다.

      # LDFLAGS=-L/usr/local/lib CPPFLAGS=/usr/local/include/file ./configure

   4) make 와 make install 을 이용하여 컴파일 후, 설치 합니다.

      # make
      # make install

   5) php.ini 에서 extension=filebin.so 를 등록한 후, web server 를 재시작 합
      니다.


2. --with-filebin=shared 를 이용한 shared extension 으로 빌드

   1) php source 를 설치 합니다.

      # tar xvjpz php-4.3.8.tar.bz2

   2) ext directory 에 mod_filebin 의 소스를 풀어 놓습니다.

      # cd php-4.3.8/ext
      # tar xvfpj mod_filebin-1.0.0.tar.bz2
      # mv mod_filebin-1.0.0 filebin

   3) configure 에 --with-filebin=shared 옵션을 주고 실행 합니다. file의 라이
      브러리와 헤더파일에 대한 언급은

      "1. phpize 를 이용하여 독립적으로 shared extension 으로 빌드"

      의 3번 항목을 참고 하십시오.

      # ./configure --with-filebin=shared

   4) 나머지 과정은

      "1. phpize 를 이용하여 독립적으로 shared extension 으로 빌드"

      의 4번 5번 항목을 참고 하십시오.


3. --with-filebin 옵션을 이용한 정적인 빌드

   정적으로 빌드하는 방법은 2번 항목과 동일하며, 2번 항목의 3)번 항목의
   ./configure 시에 --with-filebintoo과 같이 shared 옵션만 빼고 빌드 하시면
   됩니다.



- 김정균 <http://www.oops.org> 2004.08.21
